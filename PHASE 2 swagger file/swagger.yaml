swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Token not provided or invalid
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Token not provided or invalid
        '500':
          description: Internal Server Error
  /accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Management
      summary: Retrieve Transactions for an Account
      description: API for retrieving all transactions for the specified account within the current month.
      parameters:
        - name: accountId
          in: path
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successfully retrieved the list of transactions
          schema:
            type: array
            items:
              $ref: '#/definitions/AccountTransaction'
        '400':
          description: Account not found
        '401':
          description: Token not provided or invalid
        '500':
          description: Internal server error
  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Management
      summary: Retrieves the details of a specific transaction
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successfully retrieved the transaction details
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Transaction not found
        '401':
          description: Token not provided or invalid
        '500':
          description: Internal server error
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Management
      summary: Modifies the information of a specific transaction
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
        - in: body
          name: body
          description: Update transaction information
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Successfully modified the transaction
        '400':
          description: Invalid request data
        '401':
          description: Token not provided or invalid
        '404':
          description: Transaction not found
        '500':
          description: Internal server error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    type: object
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    type: object
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: string
      accountId:
        type: string
      amount:
        type: number
        format: float
      description:
        type: string
      date:
        type: string
        format: date
      Transaction Type:
        type: string
      category:
        type: string
      note:
        type: string
  AccountTransaction:
    type: object
    properties:
      id:
        type: string
      accountId:
        type: string
      description:
        type: string
  TransactionUpdate:
    type: object
    properties:
      description:
        type: string
      category:
        type: string
